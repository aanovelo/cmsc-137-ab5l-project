#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass book
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 5
\tocdepth 5
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Data Communications and Networking Concepts through Java Applets
\end_layout

\begin_layout Author
Joseph Anthony C.
 Hermocilla
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Standard
This part focuses on some introductory concepts in computer networks.
\end_layout

\begin_layout Section
Network Models
\end_layout

\begin_layout Standard
Network models describe the different components of a network and their
 interactions.
 There are two models that are well known.
 The first is the Open Systems Interconnection (OSI) model and the second
 is the Transmission Control Protocol/Internet Protocol (TCP/IP).
 Also
\end_layout

\begin_layout Exercise*
Try to answer the following questions.
\end_layout

\begin_layout Itemize
What is the importance of Network Models?Why is there a need for network
 models?
\end_layout

\begin_layout Standard
Data communications is a complex process.
 It is composed of several components that must interact to accomplish the
 task of sending information from one entity to another.
 These components include actual physical devices, such as switches and
 repeaters, as well as software, such as device drivers and protocol implementat
ions.
 Managing this complexity involves some organization by grouping together
 functions that are similar in nature.
 The groupings can further be arranged into layers to simplify the understanding
 of the components.
\end_layout

\begin_layout Itemize
What is a protocol?
\end_layout

\begin_layout Standard
A protocol is a detailed description or a procedure that describes how the
 communication can happen.
 An example of a protocol is when a lower-ranked military officer initiates
 a salute to a higher-ranked officer.
 For communication to happen, communicating entities must understand the
 rules, or the protocol.
 In a way, we can think of protocols as instructions that must be followed.
 What is important is that the entities must follow the protocol.
 To put it simply, two persons talking to each other will understand each
 other if they speak the same language and alternates speaking.
\end_layout

\begin_layout Itemize
What is the general structure of network models? 
\end_layout

\begin_layout Standard
Network models follow a layered structure.
 Each layer is given a name, but are usually referred to by their layer
 numbers, with the lowest layer numbered as 0.
 The total number of layers depend on the model.
 In the layered approach, a layer provides services to the layer above it
 and it uses the services from the layer below it.
 For example, layer 2 provides service to layer 3 and uses the services
 from layer 1.
 The layers communicate using an implementation-specific interface between
 layers N and N-1.
 An entity in a given layer implements that layer's protocol.
 Entities that implement the same protocol from a given layer are called
 peer entities.
\end_layout

\begin_layout Itemize
What are the well-known network models ?
\end_layout

\begin_layout Standard
Two well-known network models exist.
 One is the Open Systems Interconnections (OSI) and the other is the Transmissio
n Control Protocol /Internel Protocol(TCP/IP).
 TCP was developed by DARPA and is currently used by the Internet.
\end_layout

\begin_layout Itemize
What are the layers of OSI?What are the functions of the protocols for each
 layer?
\end_layout

\begin_layout Paragraph*
Physical (Layer 1)
\end_layout

\begin_layout Standard
The physical layer involves the physical properties.
 Essentially, the physical layer is in charge of moving the bits over the
 channel.
 It is responsible for aspects such as voltage levels to be used in signals,
 duplexity, and connector design.
\end_layout

\begin_layout Paragraph*
Data Link (Layer 2)
\end_layout

\begin_layout Standard
The data link layer is responsible for efficiently and reliably transmitting
 data(frames) across the link, between its ends.
 To accomplish this task, this layer is responsible for detecting errors,
 framing (grouping of bits), and controlling the flow of frames.
 In multipoint networks, an addressing scheme is also provided by the data
 link layer.
 
\end_layout

\begin_layout Paragraph*
Network (Layer 3)
\end_layout

\begin_layout Standard
The network layer is responsible for addressing and routing across multiple
 data links.
 The data link functions only cover what happens between two nodes.
 In a more complex network, several nodes can be present, and moving data
 across this complex network will require some form of routing.
 This layers enables heterogenous networks(at the data link level) to communicat
e.
 Thus the network layer is also responsible for providing an addressing
 scheme different from the addressing at the data link layer.
\end_layout

\begin_layout Paragraph*
Transport (Layer 4)
\end_layout

\begin_layout Standard
The transport layer is responsible for efficiently and reliably trasferring
 of data across networks.
 The function of the transport layer is very similar to that of the data
 link layer.
 The main difference is in the coverage.
 While the data link layer is responsible for what happens between the ends
 of the physical link, the transport layer covers what happens between two
 nodes in the presence of the network layer.
 This means that the transport layer has a wider coverage.
 Another responsibility of the transport layer is breaking down data from
 the session layer.
 Fragmented data are passed down to the network layer.
 This layer must guarantee that these arrive in order without missing or
 damaged data.
 This layer is also responsible for the high-level function of establishing
 and terminating connections.
\end_layout

\begin_layout Paragraph*
Session (Layer 5)
\end_layout

\begin_layout Standard
The session layer is responsible for maintaining the state of the data transfer.
 It is involved in coordinating the communication process by synchronizing
 data flow and reestablishing connection.
\end_layout

\begin_layout Paragraph*
Presentation (Layer 6)
\end_layout

\begin_layout Standard
The presentation layer is responsible for compression, encryption, data
 formats, and code conversions.
 
\end_layout

\begin_layout Paragraph*
Application (Layer 7)
\end_layout

\begin_layout Standard
The application layer is responsible for user-specific functions.
 Examples are e-mail, file transfer, and remote access.
\end_layout

\begin_layout Itemize
What are the layers of TCP/IP?What are the functions of each layer?
\end_layout

\begin_layout Paragraph*
Physical (Layer 1)
\end_layout

\begin_layout Standard
The physical layer for TCP/IP is very similar to Layer 0 of OSI.
 It is responsible for the physical interface like signals, connectors,
 voltages, etc.
 Sometimes, included in the physical layer of TCP/IP is the data link layer
 of the OSI.
\end_layout

\begin_layout Paragraph*
Internet (Layer 2)
\end_layout

\begin_layout Standard
The Internet Layer is similar in function to the Network layer of OSI.
 The main protocol for this layer is the Internet Protocol(IP) which describes
 addressing and routing schemes.
 Normally the functions of the Internet layer are implemented in specialized
 hardware called routers.
 
\end_layout

\begin_layout Paragraph*
Transport (Layer 3)
\end_layout

\begin_layout Standard
The transport layer is responsible for host-to-host delivery of data.
 Two protocols, User Datagram Protocol (UDP) and Transmission Control Protocol
 (TCP), defines this layer.
 
\end_layout

\begin_layout Standard
UDP provides an unreliable delivery of data( no error detection) in order
 to improve performance.
 Also, it requires very little overhead because it elimates the connection
 establishment and termination processes.
 Some applications, such as online games and streaming services, use this
 protocol.
\end_layout

\begin_layout Standard
TCP on the otherhand is a connection-oriented protocol since it uses connection
 establishment and termination processes.
 It provides reliable data transfer by providing error control and guarantees
 that data is delivered accurately and in proper order.
 Retransmission of data is also implemented in case of damaged and lost
 data.
 TCP is best to use applications that require data to be transmitted accurately,
 examples of which are file transfer and e-mail.
\end_layout

\begin_layout Paragraph*
Application (Layer 4)
\end_layout

\begin_layout Standard
Application layer provides user-specific applications such as e-mail and
 file transfer.
 There are several protocols in the application layer.
 Examples are Hypertext Transfer Protocol, File Transfer Protocol, Telnet,
 Simple Male Transfer Protocol, Domain Name System, and many others.
\end_layout

\begin_layout Itemize
How does OSI and TCP/IP differ?
\end_layout

\begin_layout Standard
TCP/IP came before the OSI was formalized.
 Originally TCP/IP was never designed to be an international standard.
 However, since it adoptation was rapid, its use became widespread.
 Starting from DARPA, academic and research institutions implemented it
 in operating systems, in particular unix.
 Unlike OSI where there is clear distinction in the functions of each layer,
 TCP/IP functions does not fit cleanly in each layer in OSI.
 Two or three layers in the OSI model are condensed to a layer in TCP/IP.
 Form example the OSI layers session, presentation, and application are
 condensed into the single TCP/IP application layer.
\end_layout

\begin_layout Section
Delays in Computer Networks
\end_layout

\begin_layout Standard
There are several sources of delays in computer networks, in particular
 packet-switched networks.
 A delay is defined as a disruption in the continuous transmission of data.
 Before actual data is transmitted, several processes are performed on the
 data as it travels across the network.
 Consider for example the simple case of sending the letter 'A' from your
 lab computer to your teachers computer.
 To illustrate the concept we are going to use an analogy using the railroad
 system.
 These sources of delays are transmission delay, node processing delay,
 propagation delay, and queueing delay.
\end_layout

\begin_layout Exercise*
Try to answer the following questions.
\end_layout

\begin_layout Itemize
What is transmission delay?
\end_layout

\begin_layout Standard
Normally data is transferred in chunks (packets).
 Transmission delay happens when the computer takes some time converting
 the data into signals that can be sent over the physical line.
 For example, a character in ASCII will be represented as an 8-bit value
 thus requiring an 8-bit signal.
 The conversion from the bits to signals is referred to as transmission
 delay.
 Transmission delay is affected by the length of the packet and the rate
 of the link.
\end_layout

\begin_layout Itemize
What is node processing delay?
\end_layout

\begin_layout Standard
Node processing delay is caused by the processing done by the computer on
 the data that must be transferred.
 Example of processing include breaking large chunks of data, converting
 across different formats, security processing, checking for errors, and
 determining the output link.
 All of these tasks take some time and is referred to as node processing
 delay.
\end_layout

\begin_layout Itemize
What is propagation delay?
\end_layout

\begin_layout Standard
The amount of time it takes for a single bit (or signal element) to traverse
 the link is called propagation delay.
 To explain this further, consider a communication system where data is
 treated as a train.
 We know that a train is composed of several cars.
 The time it takes for a car to move from one end of the railroad to another
 is called propagation delay.
 Propagation delay is dependent on the length of the link (how long the
 railroad track is) and the propagation speed of the medium (dependent on
 the medium properties).
\end_layout

\begin_layout Itemize
What is queuing delay?
\end_layout

\begin_layout Standard
Data transferred across a network usually queues up on some intermediate
 node.
 The time it takes for data to wait for an intermediate node to process
 it is called queuing delay.
 The amount of delay is dependent on how congested an intermediate node
 is.
\end_layout

\begin_layout Chapter
Physical Layer
\end_layout

\begin_layout Standard
The physical layer (Layer 0) is responsible for the physical aspects of
 the network.
 These functions include signaling, cabling, and other hardware aspects.
\end_layout

\begin_layout Section
Signal Transmission
\end_layout

\begin_layout Standard
The main mechanism for transmitting data is through signals.
\end_layout

\begin_layout Exercise*
Try to answer the following questions.
\end_layout

\begin_layout Itemize
What are the elements of a communication model?
\end_layout

\begin_layout Standard
In order to understand the data communications we need to have a basic understan
ding of the communication model.
 A communication model has several components: source, transmitter, transmission
 system, receiver, and destination.
 Let us consider these elements using human communication as an example.
 Consider a scenario when a boyfriend would like to say the message 
\begin_inset Quotes eld
\end_inset

I love you!
\begin_inset Quotes erd
\end_inset

 to his girlfried.
 The message will come from the boyfriend's brain(source).
 The message will then be converted into sound using the vocal cords(transmitter
) of the boyfriend.
 After speaking the words, the message will travel in the air (transmission
 system) in the form of sound waves.
 The girlfriend will hear the words through her ears(receiver).
 The sound waves will be converted into a message that will be sent to the
 girlfriend's brain(destination).
 
\end_layout

\begin_layout Standard
From the sample scenario, we observe that the original message (the thought)
 does not reach the destination directly, unless of course mental telepathy
 is a reality.
 The message has to be converted into some transmittable form, in this case
 sound waves.
 Observe the the form of the original message and the transmitted form are
 very different.
 As the sound waves travel through ar, it can be affected by other sounds
 (noise) which can distort the original signal, altering its meaning.
 The strength of the sound waves eventually lessens as the sound waves move
 away from the source, the boyfriend needs to shout if his girlfriend is
 far away from him.
 The example above can be extended to the telephone system wherein the transmiss
ion system, instead of just using the air, uses a series of wires to transfer
 sound waves.
 
\end_layout

\begin_layout Itemize
What is a signal?What are its characteristics?
\end_layout

\begin_layout Standard
In simple terms a signal is an expression with an associated meaning.
 For example, if you frown your face, it signals that you are sad.
 Another example would be the color red to signal stop and the color green
 to signal go.
 Sound waves and light waves are also examples of signals that occur in
 nature.
 Signals are generated by transmitters and interpreted by receivers.
 Signals vary with time.
 Some signals are continuous and some are discrete.
 Continuous signals do not have breaks or abrupt changes in them and varies
 in a smooth way over time.
 Discrete signals are those that have abrupt changes or breaks.
 Continuous signals represent analog information and discrete signals represent
 digital data.
 Analog signals are graphically represented as sine waves and discrete signals
 as square waves.
 Most signals are periodic, that is they follow a repeating pattern in their
 graphs.
 Other signals are aperiodic where no pattern is repeated over time in their
 graphs.
 
\end_layout

\begin_layout Itemize
What is frequency, spectrum, and bandwidth?
\end_layout

\begin_layout Standard
Most signals are represented as sine waves.
 Sine waves represent continuous and periodic signals.
 As such, signals can be characterized by amplitude, frequency, and phase.
 Amplitude(A) refers to the strength of a signal and is measured in terms
 of volts.
 Frequency(f) refers to the rate of change of a signal and is measured in
 terms of hertz (Hz) or cycles per second.
 Period (T) represents the time for one repetition in the signal.
 Period is equal to 
\begin_inset Formula $\frac{1}{f}$
\end_inset

.
 Phase refers to the relative position of the wave with respect to time
 and is represented as 
\begin_inset Formula $\theta$
\end_inset

.
 The distance occupied by one cycle is called the wavelength denoted by
 
\begin_inset Formula $\lambda$
\end_inset

.The wavelength of a signal is equal to the period multiplied by the speed
 of light, c, which is equal to 
\begin_inset Formula $3+10^{8}m/s$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\lambda=cT
\]

\end_inset


\end_layout

\begin_layout Itemize
How do we describe signals as a function of time?
\end_layout

\begin_layout Standard
A signal as a function of time describes a signal varying with time.
 The simplest signal is the simple sine wave.
 This is the traditional way of describing signals.
 The equation below describes a signal in terms of its amplitude A at given
 time t.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
s(t)=A\sin(2\pi kf_{1}t+\theta)
\]

\end_inset


\end_layout

\begin_layout Itemize
How do we describe signals as a function of frequency?
\end_layout

\begin_layout Standard
It can also be shown that all signals can be described as a function of
 frequency, such that a signal is composed of several component sine waves
 of different frequencies.
 Consider for example a square wave.
 Recall that a square wave is used to describe discrete signals.
 Actually, a square wave is composed of several component sine waves.
 The equation below describes the component sine waves of a given square
 wave.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
s(t)=A\sum_{k=1}^{inf}\frac{1}{k}\sin(2\pi kf_{1}t)
\]

\end_inset


\end_layout

\begin_layout Standard
Notice that in this representation, a signal can have an infinite number
 of frequency components.
 However, the strength of the signal and its major characteristics are defined
 in the first few sine wave components.
 Given a signal, the range of frequencies that represent the signal is called
 the spectrum.
 The absolute bandwidth of the signal is the difference between the maximum
 frequency component and the smallest frequency component.
 If a signal has a zero-frequency component, we call this the direct-current
 or dc component.
 Presence of a dc component affects the properties of a signal.
 
\end_layout

\begin_layout Itemize
What is the relationship between data rate and bandwidth?
\end_layout

\begin_layout Standard
Although a given signal may have an infinite number of frequency components,
 the strength of the signal is confined to a narrow band of frequncies.
 The width of this band is referred to as the effective bandwidth.
 However, despite a signal having an infinite bandwidth, any medium can
 only hold a limited band of frequencies.
 In general bandwidth is directly proportional to data rate.
 If we increase the bandwidth, the data rate also increases.
 It must be observed however that a given bandwidth can support different
 data rates depending on the needs and capabilities of the receiver.
 
\end_layout

\begin_layout Standard
To summarize, a square wave can have an infinite bandwidth.
 However the transmission medium will limit the bandwidth that can be transmitte
d.
 Lastly, the greater the bandwidth the costly it is on the receiver end.
 In general, if we want to achieve a data rate of W bps we need at least
 a bandwidth of 2W Hz.
 
\end_layout

\begin_layout Itemize
What is the measure of the strength of a signal?
\end_layout

\begin_layout Standard
Once a signal is transmitted over a medium, the strength of a signal diminishes.
 The phenomenon is called attenuation.
 In order to increase signal strength, amplifiers may be used in the transmissio
n system.
 Signal strength is usually expressed in decibels, a measure of the difference
 between two power levels.
\begin_inset Formula 
\[
N_{dB}=10\log_{10}\frac{P_{1}}{P_{2}}
\]

\end_inset


\end_layout

\begin_layout Standard
where
\end_layout

\begin_layout Standard
\begin_inset Formula $N_{dB}$
\end_inset

= number of decibels
\end_layout

\begin_layout Standard
\begin_inset Formula $P_{1,2}=$
\end_inset

power values
\end_layout

\begin_layout Standard
For example if a given signal has a power of 20mW when inserted in the transmiss
ion line and in some distance away the measure is 5mW, then the loss can
 be expressed as:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
LOSS=10\log\left(\frac{5}{20}\right)=10\left(-0.6\right)=-6dB
\]

\end_inset


\end_layout

\begin_layout Itemize
What are the different digital-digital encoding techniques?
\end_layout

\begin_layout Standard
Digital data (zero's and one's) can be transmitted as digital signals (square
 wave).
 The main reason for using this encoding technique is that it is easier
 to develop equipment for this type of encoding, as well as it is cheaper.
 Normally the signaling is based on voltage pulses, referred to as signaling
 elements.
 First let us define some terms.
 Unipolar means that all the signal elements have the same sign, that is
 all are positive voltages or all are negative voltages.
 Polar means that positive or negative vultages are used in the signalling.
 Data rate refers to rate of transmitting data in bits per second.
 The duration/legth of a bit is the amount of time it takes for a transmitter
 to emit a bit.
 Given a data rate R, then the duration is 1/R.
 Modulation rate is the rate at which the signal level changes.
 It is measured in terms of baud or signal elements per second.
 For historical reasons, the term Mark represents a binary 1 and the term
 space represent binary 0.
\end_layout

\begin_layout Standard
At the recevier end, it must know the timing of the bits, to determine the
 start and and of a bit, as well as the signal level, either high or low,
 in order to interpret the signals.
 There are several factors that affect successful interpretation, including
 signa-to-noise ration, bandwidth, and data rate.
 First a high signal-to-noise ratio will guarantee a decrease in the bit
 error rate.
 Another, if the data rate is increased, the bit error rate will also increase.
 Lastly, by increasing the bandwidth, data rate will be increased.
 Desirable encoding schemes can also improve the interpretation.
 
\end_layout

\begin_layout Standard
There are several factors to consider when comparing different encoding
 schemes.
 The first is signal spectrum.
 If the signal has very few high frequency components, then less bandwidth
 is required to transmit the signal.
 The lack of a DC component in the signal provides electrical isolation
 via transformer.
 Second is clocking.
 Clocking is important to synchronize the transmitter and the receiver.
 An expensive approach here is for the transmitter and the receiver to use
 an external clock to sychnronize, which requires an additional line.
 A cheaper method is to embed in the signal the synchronization information.
 Some encoding techniques use this approach as you will see later.
 Third is error detection.
 Several impairments can happen during transmission.
 Error detection can be built into the physical signal itself to speed up
 the process.
 Fourth is immunity to noise.
 Certain coding schemes are resistant to noise and other signal interference.
 Lastly, is cost and complexity.
 Some encoding schemes will require complicated hardware circuitry while
 others can operate in simple circuits.
 
\end_layout

\begin_layout Paragraph*
NRZ-L
\end_layout

\begin_layout Standard
Nonreturn-to-Zero-Level uses two voltages, positive and negative, to represent
 1 and 0.
 During the bit interval, the voltage is constant.
 The bit interval is the time alloted for the transmission of a single bit.
 In other encodings, the voltage level may change during a bit interval
 as we shall see later.
\end_layout

\begin_layout Paragraph*
NRZI
\end_layout

\begin_layout Standard
Nonreturn-to-Zero-Inverted on ones also uses a constant voltage for a bit
 duration.
 However, instead of voltage level, it is the signal transition that indicates
 the value of the bit.
 If a signal transition from low to high or high to low is present at the
 start of the bit duration then the signal is interpreted as 1, no transition
 indicates 0.
 This is an example of differential encoding since the current value is
 based on the previous value.
 Voltage transition is more reliable than voltage level since it the receiver
 will not be affected by timing errors.
\end_layout

\begin_layout Standard
NRZ is easy to work with and makes effective use of bandwidth of the transmissio
n system.
 However, it has a DC component and its lack of synchronization capabilities
 requiring an external clock for timing.
 
\end_layout

\begin_layout Paragraph*
Bipolar-AMI
\end_layout

\begin_layout Standard
Bipolar-AMI is is an example of multilevel binary which uses more than two
 voltage levels to represent a 1, which alternate in polarity.
 0 is represented by the absence of the signal.
 The advantage of this is that there is no net DC component, thus providing
 electrical isolation.
 However, the bandwidth is less than NRZ.
 Errors can easily be detected given the alternating polarity for 1s.
\end_layout

\begin_layout Paragraph*
Pseudoternary
\end_layout

\begin_layout Standard
Pseudoternary is very similar to Bipolar-AMI except that it is zero that
 is represented by alternating polarities and 1 by the absence of a signal.
\end_layout

\begin_layout Standard
Compared to NRZ, multilevel binary does is not as efficient.
 The reason is that ideally, for a 3-level scheme, it should be able to
 represent 
\begin_inset Formula $\log_{2}3$
\end_inset

=1.58 bits.
 However, it this case, each signal element can represent only a single
 bit.
 Another is that at the receiver end, it must distinguish among positive,
 negative, and zero level signals which complicate its logic.
 
\end_layout

\begin_layout Paragraph*
Manchester
\end_layout

\begin_layout Standard
Manchester encoding forces a transition at the middle of each bit duration
 which serves both for timing and data.
 Midbit transition from low to high represents a one and high to low transition
 represents a zero.
 Manchester encoding is used in IEEE 802.3 LAN technology.
 How does the midbit transition allow for synchronization?What happens is
 that the receiver will always look for this transition within a bit duration
 such that if the receiver did not detect this error, then there must be
 something wrong.
 Although this makes the timing built in to the signal, it complicates the
 logic at the receiver end.
 
\end_layout

\begin_layout Paragraph*
Differential Manchester
\end_layout

\begin_layout Standard
Differential Manchester is similar to Manchester except that the midbit
 transition is for timing only and the transition at the start of the bit
 duration is used for determining a zero or a one.
\end_layout

\begin_layout Standard
Some of the disadvantages of biphase (Manchester and Differential Manchester)
 include high bandwidth requirement, presence of at least one transition
 (at most two) for a bit duration, requires twice the modulation rate of
 NRZ.
 On the other hand, the advantages include self-clocking, absence of a DC
 component, and error detection.
\end_layout

\begin_layout Paragraph*
B8ZS
\end_layout

\begin_layout Standard
There are instances that data to be sent can consist of long sequence of
 ones or long sequence of zeros.
 In these cases, especially in long distance communication, the timing of
 the receiver may be off because of the the constant voltage levels.
 Scrambling techniques allow contants voltage levels to be replaced by a
 certain pattern that can still be recognizable by the receiver but allows
 for synchronization.
 The pattern should be able to produce a sufficient amount of transitions
 to synchronize the receiver and the transmitter and must be of the same
 length as the original.
\end_layout

\begin_layout Standard
Bipolar with 8 zeros Substitution is based on the bipolar-AMI.
 It follows simple substitution rule.
 If there is an octet of all zeros and the last voltage was positive then
 the patter 000+-0-+ is used.
 If the last voltage is negative, we use the pattern 000-+0-.
 These patterns causes two violations of the AMI code and the occurence
 of this pattern is statistically proven to be very unlikely in regular
 transmission.
 
\end_layout

\begin_layout Paragraph*
HDB3
\end_layout

\begin_layout Standard
High Density Bipolar 3 Zeros is another scrambling technique that is also
 based on the Bipolar-AMI.
 In this approach, a string of four zeros is replaced with one or two pulses
 with the fourth zero being replaced with a code violation in AMI.
 
\end_layout

\begin_layout Itemize
Polarity of preceding pulse: Negative
\end_layout

\begin_deeper
\begin_layout Itemize
Number of 1's since last substitution: Odd
\end_layout

\begin_deeper
\begin_layout Itemize
000-
\end_layout

\end_deeper
\begin_layout Itemize
Number of 1's since last substitution: Even
\end_layout

\begin_deeper
\begin_layout Itemize
+00+
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Polarity of preceding pulse: Negative
\end_layout

\begin_deeper
\begin_layout Itemize
Number of 1's since last substitution: Odd
\end_layout

\begin_deeper
\begin_layout Itemize
000+
\end_layout

\end_deeper
\begin_layout Itemize
Number of 1's since last substitution: Even
\end_layout

\begin_deeper
\begin_layout Itemize
-00-
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
What are the different digital-analog encoding techniques?
\end_layout

\begin_layout Standard
In some instances, digital data must be converted into analog signals for
 transmission.
 The main reason for this is that existing transmission systems are capable
 of transmitting analog signals only.
 For example, the public telephone system can transmit analog signals in
 the voice frequency range of 300Hz to 3400Hz.
 During the early days when digital transmission systems do not exist, home
 owners connect to the Internet using a modem(modulator-demodulator) that
 converts digital characters into tones that can be transmitted over the
 telephone line.
 This is referred to as dial-up networking in the early days.
 There are several techniques to perform this encoding.
 The most common are the Amplitude Shift Keying(ASK), Frequency Shift-Keying(FSK
), and Phase Shift Keying(PSK).
 A carrier frequency 
\begin_inset Formula $f_{c}$
\end_inset

 is used to carry the signal for all the approaches.
\end_layout

\begin_layout Standard
Amplitude Shift Keying uses the amplitude to represent 1 and 0.
 Oftentimes, 1 is denoted by a certain amplitude value(actually the presence
 of the carrier signal) and 0 by the absence of the carrier signal (zero
 amplitude).
 On voice grade lines, it can achieve a data rate of up to 1200 bps.
 One application of ASK is transmitting digital data using fiber optic cable
 as transmission medium.
 
\end_layout

\begin_layout Standard
Frequency Shift Keying uses freqiency to represent the binary values.
 For example we can represent 1 with f=2 and 0 with f=4.
 FSK is widely used for high frequency radio and LANs that use coaxial as
 transmission medium.
 The frequencies are an offset from the carrier frequency but on opposite
 ends.
\end_layout

\begin_layout Standard
Lastly, Phase Shift Keying uses the changes in the phase of the signal for
 data representation.
 For example, a phase angle of 90 degrees can represent 1 and a phase angle
 of 180 degrees can represent a zero.
 In some cases, the shifts in phase is relative to the previous transmission
 rather than a reference.
 This is referred to as differential PSK.
 One interesting aspect of PSK is that we can use a single signal to represent
 more than just a single bit.
 This will improve the efficiency of the transmission.
 In Quadrature PSK for example, shifts of 90 degrees can be used wherein
 each shift represents two bits (dibits).
 0 degrees represents 00, 90 degrees represents 01, 180 degrees represents
 10, and 270 degrees represent 11.
 Moreover, we can transmit 3 bits using 8 phase angles.
 
\end_layout

\begin_layout Standard
ASK and PSK can be combined to further improve transmission efficiency.
 This technique is called Quadrature Amplitude Modulation (QAM).
 Using eight phase angles and two amplitudes, 16 signal changes can be achieved
 which allow it to transmit 4 bits per signal level.
\end_layout

\begin_layout Itemize
What are the different analog-analog digital encoding techniques?
\end_layout

\begin_layout Standard
Analog data can also be transmitted using analog signals.
 The analog data can be represented at their own frequency (baseband) as
 in the case of the telephone system.
 It can also be encoded using a different frequency(carrier) as in the case
 of radio broadcasting.
 The altering of a signal in a given frequency by encoding data in it is
 called modulation.
 By modulating signals, we can take advantage of higher frequency signals
 for more efficient transmission.
 For example, the radio station RJ transmits at a frequency off 100.3 MHz
 to carry music.
 Another advantage of modulation is that it allow multiplexing which allows
 multiple data to be carried by a single high frequency as in the case of
 cable television where you have a single cable running to your home but
 you can watch different channels (centered on different low frequency signals).
 In this section we look at three approaches to modulation namely: amplitude,
 frequency, and phase.
\end_layout

\begin_layout Standard
Amplitude modulation uses changes in amplitude.
 Given a carrier signal c(t) and message m(t)
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
c(t)=A\sin(f_{c}t+\theta_{c})
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
m(t)=M\cos(f_{m}+\theta_{m})
\]

\end_inset


\end_layout

\begin_layout Standard
The modullated signal transmitted is the product of the two:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y(t)=A\left[1+M\cos(f_{m}t+\theta_{m}\right]\sin(f_{c}t)
\]

\end_inset


\end_layout

\begin_layout Standard
Frequency modulation varies the instantaneous frequency.
 Given a message signal 
\begin_inset Formula $x_{m}(t)$
\end_inset

 and the carrier 
\begin_inset Formula $x_{c}(t)=A_{c}\cos(2\pi f_{c}t$
\end_inset

), the transmitted signal is given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y(t)=A_{c}\cos\left(2\pi f_{c}t+\frac{f_{\Delta}}{f_{m}}\cos\left(2\pi f_{m}t\right)\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Phase modulation alters the phase angle.
 Consider the modulating signal 
\begin_inset Formula $m(t)$
\end_inset

and the carrier signal 
\begin_inset Formula $c(t)=A_{c}\sin(f_{c}t+\theta_{c})$
\end_inset

, the modulating signal is given by 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y(t)=A_{c}\sin(f_{c}t+m(t)+\theta_{c})
\]

\end_inset


\end_layout

\begin_layout Itemize
What are the different analog-digital encoding techniques?
\end_layout

\begin_layout Standard
Naturally occuring data are usually analog, for instance sound.
 In order for the analog data to be processed by a digital device, say a
 computer, these analog data are converted to digital signals.
 This process is call digitization.
 Similar to a modem, a device that converts analog data to digitial signals
 is referred to as codec (coder-decoder).
 
\end_layout

\begin_layout Standard
A common technique is called Pulse Code Modulation (PCM).
 It involves two steps, sampling and coding.
 The sampling step takes a sample of the amplitude of the signals waveform
 at regular intervals.
 The generated signal should match the corresponding analog signal.
 The coding step then maps the analog samples to binary code to generate
 the final signal.
\end_layout

\begin_layout Standard
Another approach is Delta Modulation where the values of the bits depend
 on the level of the signal relative to the previous level.
 When the signal is going up, a value of 1 is used, otherwise, 0.
 The main disadvantage of this approach is that a signal that changes fast
 will cause a loss of information.
\end_layout

\begin_layout Chapter
Data Link Layer
\end_layout

\begin_layout Section
Flow Control
\end_layout

\begin_layout Itemize
What is flow control?
\end_layout

\begin_layout Standard
The data link layer is responsible for activities such as framing, error
 control, and flow control.
 In general, the goal of the data link layer is efficient and reliable data
 transfer.
\end_layout

\begin_layout Standard
Flow control guarantees that the receiving entity is not overwhelmed by
 the sending entity.
 The receiver has limited resources (for example buffers and processing
 power).
 If the sender will send too much information, the receiver might not be
 able to process all of them because of the limited resources.
 In this section, we assume that there are no errors in the frames that
 are being transmitted.
 Also, we use a sequence diagram to illustrate the interaction of the sender
 and the receiver.
 The sequence diagram shows the progression across time.
 Before we discuss the different approaches, let us review some definitions
 first.
 Transmission time refers to the time taken to emit all bits into the medium.
 Propagation time refers to the time it takes for a bit to traverse the
 link.
 These times affect the efficiency of the transmission given a flow control
 protocol.
 
\end_layout

\begin_layout Subsection
Stop and Wait
\end_layout

\begin_layout Itemize
How does Stop-and-Wait work?
\end_layout

\begin_layout Itemize
What are the effects of propagation delay and transmission rate?
\end_layout

\begin_layout Standard
The first protocol we are going to look at is called Stop-and-Wait.
 In this protocol the sender waits for an acknowledgment(ACK) from the receiver
 before it sends the next frame.
 In essence, by not sending an ACK, the receiver can stop the sender from
 sending the next frame.
 As you can see, this protocol is simple.
 However, this approach is effective only for large frames.
 In todays networks, large chunks of data are divided into smaller pieces.
 This process is called fragmentation.
 There are several advantages of doing this as stated below.
\backslash

\end_layout

\begin_layout Itemize
The receiver may have a smaller buffer size than the actual data to transmit.
\end_layout

\begin_layout Itemize
It is easy to detect errors early if we have small frames.
 When retransmission is needed in case of erroneous frames, only a smaller-sized
 frame needs to be retransmitted.
 
\end_layout

\begin_layout Itemize
In case of a multipoint links wherein several stations are connected, it
 prevents a single station from occupying the medium for a long period of
 time.
\end_layout

\begin_layout Standard
Let us analyze the efficiency of this protocol using a half-duplex link
 by examining the total amount of the time the sender has to wait before
 sending the next frame.
 Let us denote this value as 
\begin_inset Formula $T_{t}$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T_{t}=T_{frame}+T_{prop}+T_{procReceiver}+T_{ack}+T_{prop}+T_{procSender}
\]

\end_inset


\end_layout

\begin_layout Standard
If we assume that the processing time(
\begin_inset Formula $T_{procReceiver}$
\end_inset

and 
\begin_inset Formula $T_{procSender}$
\end_inset

) and the acknowledgment frame(
\begin_inset Formula $T_{ack}$
\end_inset

) are negligible then 
\begin_inset Formula $T_{t}$
\end_inset

becomes just the sum of the frame transmission time and twice the propagation
 time.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T_{t}=T_{frame}+2T_{prop}
\]

\end_inset


\end_layout

\begin_layout Standard
We let 
\begin_inset Formula $U$
\end_inset

be the measure of efficiency such that
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
U=\frac{T_{frame}}{\left(T_{frame}+2T_{prop}\right)}
\]

\end_inset


\end_layout

\begin_layout Standard
We can define 
\begin_inset Formula $a=\frac{T_{prop}}{T_{frame}}$
\end_inset

 and 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
U=\frac{1}{1+2a}
\]

\end_inset


\end_layout

\begin_layout Standard
This represents the maximum utilization of the link.
 Propagation time(
\begin_inset Formula $T_{prop}$
\end_inset

) is equal to the length of the link(
\begin_inset Formula $d$
\end_inset

) divided by the propagation velocity(
\begin_inset Formula $c$
\end_inset

), which is usually near the speed of light.
 Transmission time is the length of the frame(
\begin_inset Formula $L$
\end_inset

) divided by the data rate(
\begin_inset Formula $R$
\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
a=\frac{\frac{d}{c}}{\frac{L}{R}}=\frac{Rd}{cL}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $a$
\end_inset

is thus proportional to the length of the link and the data rate which represent
s the length of the medium in bits (
\begin_inset Formula $\frac{Rd}{V}$
\end_inset

) compared to the length of the frame.
 
\end_layout

\begin_layout Standard
To illustrate the concepts, consider a modem on a voice-grade line.
 The data rate for such connections is 9600 bps.
 We let 
\begin_inset Formula $c=2x10^{8}m/s$
\end_inset

for a typical coaxial cable.
 If the length of the frame is 500 bits and the distance is about 100m then
 the utilization is good.
 However if we let d to be 5000km, the utilization is only 0.5.
 In general Stop-and-Wait is inefficient despite its simplicity.
 The main problem with Stop-and-Wait is that it does not take advantage
 of the fact that the length of the link in bits is sometimes longer than
 the frame length.
 This means that we can send another frame while waiting for the acknowledgement
 of the previous frame.
\end_layout

\begin_layout Subsection
Sliding Window Flow Control
\end_layout

\begin_layout Itemize
How does the sliding window protocol work?
\end_layout

\begin_layout Standard
The sliding window flow control allows multiple frames to be in transit
 without waiting for acknowledgement.
 To accomplish this, instead of having just a single buffer, the receiver
 has W buffers.
 The transmitter can then send W frames without waiting for acknowledgement.
 In order to keep track of the frames, a sequence number is assigned to
 each frame.
 When the receiver sends an ACK, it includes the sequence number of the
 next frame it expects.
 The sequence number should be bounded such that there will be no two frames
 in transit that are of the same sequence number.
 Usually the frame numbers are modulo 
\begin_inset Formula $2^{k}$
\end_inset

where 
\begin_inset Formula $k$
\end_inset

 is the size of the sequence number field.
 For example, if the size of the sequence number field of a frame is three
 bits (k=3), then they can be numbered from zero to seven.
 
\end_layout

\begin_layout Standard
The name sliding window comes from the fact that both the sender and the
 receiver maintains a send window and receive window respectively.
 The send window is the sequence number of frames that the transmitter can
 send without waiting for an acknowledgement while the receive window is
 the set of sequence number that the receiver is ready to accept.
 In the send window, the window size varies as ACKs arrive and frames are
 sent.
 When a new ACK arrives, the size of the window increases, whereas when
 a frame is transmitted, the the size of the window descreases.
 On the other hand, in the receive window, the sequence numbers of frames
 received and not yet acknowledged are stored so that the receiver knows
 what frames to process.
 The send and receive window sizes depend on the frame size, buffer, and
 propagation time.
 The receive window will also depend on how fast the receiver processes
 incoming frames.
 
\end_layout

\begin_layout Standard
Several enhancements are available for stop and wait.
 One is the ability to acknowledge a frame without permitting the sender
 to send.
 This is accomplished by sending a Receive Not Ready (RNR) instead of the
 normal ACK.
 Once the receiver is ready to receive frames, it sends a normal ACK frame.
 In duplex mode (two-way transmission), a technique called piggbacking is
 used.
 A frame contains both data and ACK.
 This approach saves capacity because only one frame is transmitted instead
 of two(data and ACK).
 In cases when there is no data to send, an ordinary ACK is used because
 it is smaller in size than a regular frame.
 If there is data to send but no new ACK, then the value of the previous
 ACK is used.
 
\end_layout

\begin_layout Exercise*
Try to answer the following questions.
\end_layout

\begin_layout Section
Error Control
\end_layout

\begin_layout Standard
Another function of the data link layer is error control.
 During transmission, frames may be damaged or lost in transit.
 A lost frame is one that has been transmitted by the transmitter but failed
 to reach the receiver.
 A damaged frame on the otherhand is succesfully received by the receiver
 but it is not the frame that the transmittter sent.
 The method for handling lost and damaged frames is referred to as Automatic
 Repeat reQuest (ARQ).
\end_layout

\begin_layout Subsection
Stop-and-Wait
\end_layout

\begin_layout Standard
In this approach, the sender waits for an acknowledgement frame(ACK) from
 the receiver.
 If no ACK is received after a certain amount of time, a timer expires and
 the transmitter must retransmit the frame again.
 Similar to the stop-and-wait flow control, only one frame is allowed to
 be in transit at a time thus this method is inefficient.
 
\end_layout

\begin_layout Standard
Continuous ARQ solves the inefficiency of stop-and-wait by allowing multiple
 frames to be in transit.
 The method is similar to the sliding window flow control.
 If there are no errors (lost or damaged frames), then a 100% link utilization
 can be achieved.
 In case there are errors, two approaches are possible namely Go-Back-N
 and Selective Reject.
\end_layout

\begin_layout Exercise*
Try to answer the following questions.
\end_layout

\begin_layout Subsection
Go-Back-N
\end_layout

\begin_layout Standard
Go-Back-N retransmits all the frames that were sent after an erroneous frame
 was transmitted.
 At the receiver end, the erroneous frame and all future frames are discarded
 until the frame in error is received succesfully.
 The usual ACK frame is sent by the receiver for frames with no errors.
 The way Go-Back-N handle erroneous frames depends on the type of error.
\end_layout

\begin_layout Standard
In case of damaged frames, if a given frame Fi is sent by the transmitter
 and during transit, the frame is damaged, the receiver sends a rejection.
 After the transmitter receives the rejection, it sends Fi again and all
 subsequent frames sent after Fi.
\end_layout

\begin_layout Standard
For a lost frame i, the receiver, after examining the sequence number of
 the current frame i+1, will notice that it is missing frame i.
 It will send a NAK or REJ i which forces the transmitter to send frame
 i and all succeeding frames.
 If no succeeding frames have been sent after the lost frame i, the receiver
 will get nothing and after a timeout, the transmitter will send a Request
 Ready (RR) control frame with the Poll(P) bit set.
 Once the reciver receives this RR, it sends an ACK with the lost frame
 number i.
 The transmitter then sends frame i after getting the ACK i.
 This case is also applicable for damaged rejection (REJ) frames.
\end_layout

\begin_layout Standard
In case the acknowledgement is damaged, acknowledgements are cumulative.
 This means that the next acknowledgement (i+n) may arrive before transmitter
 times out of frame i.
 The (i+n) acknowledgement also acknowledges i.
 Now in case of a time out, then the transmitter sends an RR with P bit
 set.
 
\end_layout

\begin_layout Exercise*
Try to answer the following questions.
\end_layout

\begin_layout Itemize
How does Go-Back-N work?
\end_layout

\begin_layout Subsection
Selective Reject
\end_layout

\begin_layout Standard
Selective reject retransmits only the frames that are erroneous and is also
 called Selective Retransmission.
 This has the advantage of minimizing the numner of transmission as opposed
 to Go-Back-N.
 This however comes at a cost.
 Since the receiver must keep track of the frames recieved, it must have
 large enough buffer and at the same time more complicated circuitry.
 
\end_layout

\begin_layout Exercise*
Try to answer the following questions.
\end_layout

\begin_layout Itemize
How does Selective Reject work?
\end_layout

\begin_layout Subsubsection
High-Level Data Link Control
\end_layout

\begin_layout Standard
HDLC is a simple protocol for the data-link layer.
 
\end_layout

\begin_layout Exercise*
Try to answer the following questions.
\end_layout

\begin_layout Itemize
What are the requirements for the bit-oriented data link protocols?
\end_layout

\begin_layout Itemize
What is HDLC?
\end_layout

\begin_layout Itemize
What are the types of HDLC stations?
\end_layout

\begin_layout Itemize
What are the link configurations for HDLC?
\end_layout

\begin_layout Itemize
What are the three data transfer modes of operation?
\end_layout

\begin_layout Itemize
What are the types of frames and their fields in HDLC?
\end_layout

\begin_layout Itemize
Give an example of HDLC operation.
\end_layout

\begin_layout Section
Carrier-Sense Multiple Access with Collision Detection
\end_layout

\begin_layout Standard
Carrier-Sense Multile Access with Collision Detection is the mechanism used
 by IEEE 802.3(commonly known as Ethernet) for flow control.
 It uses an exponential backoff which randomizes retransmission thereby
 reducing frame collision in the bus topology.
\end_layout

\begin_layout Exercise*
Try to answer the following questions.
\end_layout

\begin_layout Itemize
How does CSMA-CD works?
\end_layout

\begin_layout Itemize
What is the flowchart of CSMA-CD operation?
\end_layout

\begin_layout Chapter
Network Layer
\end_layout

\begin_layout Section
IP Routing
\end_layout

\begin_layout Standard
IP packets are transmitted accross a network through routers.
 When an IP packet is sent from a node, it is first transmitted to a gateway
 node, the router, which determines where to forward the packet.
 This is accomplished by the router through its routing table.
 In the routing table, the destination address of the received packet is
 examined and compared to the entries in the table.
 
\end_layout

\begin_layout Exercise*
Try to answer the following questions.
\end_layout

\begin_layout Chapter
Application Layer
\end_layout

\begin_layout Section
Encryption
\end_layout

\begin_layout Standard
Encryption disallows easy interpretation of secret messages.
\end_layout

\begin_layout Exercise*
Try to answer the following questions.
\end_layout

\begin_layout Itemize
What is encipherment as a form of security mechanism?
\end_layout

\begin_layout Itemize
What is symmetric encryption?
\end_layout

\begin_layout Itemize
What is a plaintext?
\end_layout

\begin_layout Itemize
What is a ciphertext?
\end_layout

\begin_layout Itemize
What is cryptography?
\end_layout

\begin_layout Itemize
What is a cipher?
\end_layout

\begin_layout Itemize
What is cryptanalysis?
\end_layout

\begin_layout Itemize
What is cryptology?
\end_layout

\begin_layout Itemize
What is a brute-force attack?
\end_layout

\begin_layout Itemize
How do substitution techniques work?
\end_layout

\begin_layout Itemize
How to transposition techniques work?
\end_layout

\end_body
\end_document
