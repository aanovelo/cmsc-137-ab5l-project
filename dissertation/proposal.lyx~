#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{draftwatermark}
\SetWatermarkLightness{0.92}
\SetWatermarkScale{5}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
SciCloud: Cloud for high-performance scientific computing
\end_layout

\begin_layout Date
Joseph Anthony C.
 Hermocilla
\end_layout

\begin_layout Section
Thesis
\end_layout

\begin_layout Standard
High-performance scientific computing can be done over cloud infrastructure
 and can be guaranteed a performance that is comparable to bare metal machines
 currently used in supercomputers or dedicated commodity clusters.
\end_layout

\begin_layout Section
Rationale
\end_layout

\begin_layout Standard
Since the digital computer was invented, it has been an important tool in
 doing science.
 In fact, without it, progress in science will be quite slow.
 Several scientific breakthroughs have been made possible because of digital
 computers.
 From the sequencing of the human genome to the discovery of the Higg's
 Boson particle, the digital computer has its very important role.
 From simple arithmetic to modeling biological and physical systems, the
 digital computer is able to deliver the result of experiments in an accurate
 and timely manner.
\end_layout

\begin_layout Standard
Scientific applications, such as equation solvers and simulations, are very
 CPU-intensive and Memory-intensive.
 These applications, because of their heavy computational and storage requiremen
ts, are usually run in high-performance computing (HPC) infrastructures
 using supercomputers or commodity clusters for distributed computations.
 Setting up such infrastructures requires a lot of initial capital and technical
 investments.
 Once the infrastructure has been set up, maintenance costs will also be
 required to update the hardware and software components.
 Although these infrastructures are indeed useful, studies have shown that
 they are underutilized.
 Their usage depends on the computing demand pattern of scientists and researche
rs which often make these infrastructures idle.
 Most HPC clusters in research centers cater to a mix of researchers from
 different study areas.
 For example, physicists and chemists may share the same HPC cluster running
 on Linux operating system.
 Differences in usage requirements of these researchers affect the overall
 operation of the cluster.
 Provisioning the hardware and software requirements needed for scientific
 computing is thus very challenging because of these factors.
\end_layout

\begin_layout Standard
Despite the recent advances in hardware (increased processing speed and
 memory) and their decreasing costs, typical users do not harness the full
 capacity of their machines, either because the software they are using
 does not support them or their computing needs do not require access to
 the full capacity of their machines.
 Web browsing and word processing, for example, usually do not require high-perf
ormance machines whereas gaming needs them for an enhanced user experience.
 Another example is the case of laboratory computers used for instruction
 in academic institutions.
 Despite having the latest processors and a good amount of memory, they
 are typically used just for simple programming exercises which do not require
 the full access to hardware performance.
 These underutilized machines can be used for scientific computing needs.
 
\end_layout

\begin_layout Standard
Machines used in clusters are usually dedicated, which means that they cannot
 be used for other general-purpose computing needs.
 When running tasks, the number of machines used from the clusters used
 are usually statically set often with the assistance of system administrators
 managing the cluster.
 A scientist who needs to perform a simulation need to contact the cluster
 administrator to schedule the job that must be run.
\end_layout

\begin_layout Subsection
What is Scientific Computing?
\end_layout

\begin_layout Standard
According to Wikipedia, Scientific Computing, also known as Computational
 Science, involves the use of computers for solving problems in science.
 It is concerned with model construction, which is mostly mathematical,
 as well as quantitative analysis.
 It is also involved in computer simulation and other forms of computation
 that are used to solve problems in various scientific disciplines.
 Scientists develop software that models the system being studied and run
 them with various parameters.
 The nature of the models requires a lot computations(floating point operations)
 and data.
\end_layout

\begin_layout Subsection
Desktop Computers, Supercomputers, Clusters, and Grid Computing
\end_layout

\begin_layout Standard
The nature of software created for science, involving complex calculations,
 will require a different approach to their implementation and execution.
 Desktop computers are useful for small scale simulations but are slow for
 complex experiments.
 Supercomputers are computers, way beyond the capabilities of desktop computers,
 that have a specialized architecture optimized for floating point operations.
 However, these types of computers are usually very costly.
 Clusters are a collection of typical desktop computers connected through
 a local area network and is less costly.
 They execute scientific applications in a distributed manner usually using
 distributed shared memory or message passing.
 Grid computing extends the capabilities of clusters by going beyond the
 local area network extending through a wide area network, in a totally
 distributed manner.
 Grid computing is usually federated.
 
\end_layout

\begin_layout Subsection
What is Cloud Computing?
\end_layout

\begin_layout Standard
Cloud computing is a recent buzzword in computing.
 The diversity of applications running on top of the Internet, from e-commerce
 and banking to social networks, forces the vendors to address the issue
 of scale.
 In the case of social networking sites, for example, the continuously increasin
g number of users will demand additional physical computing resources to
 be provisioned.
 Application developers who develop software can focus on implementing functiona
lity instead on optimizing code to address increasing demand.
 
\end_layout

\begin_layout Standard
The widely accepted definition of cloud computing is from the National Institute
 of Standards and Technology
\begin_inset CommandInset citation
LatexCommand cite
key "mell_nist_2011"

\end_inset

.
 It defines cloud computing as 
\end_layout

\begin_layout Quotation
\begin_inset Quotes eld
\end_inset

a model for enabling ubiquitous, convenient, on-demand network access to
 a shared pool of configurable computing resources (e.g., networks, servers,
 storage, applications, and services) that can be rapidly provisioned and
 released with minimal management effort or service provider interaction
 .
 This cloud model promotes availability and is composed of five essential
 characteristics , three service models , and four deployment models .
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
There are five main characteristics of cloud computing
\begin_inset CommandInset citation
LatexCommand cite
key "mell_nist_2011"

\end_inset

.
 First, on-demand access allows users to provision computing resources without
 requiring human interaction from the service provider.
 Second, the capabilities are available over the network accessible through
 standard mechanisms.
 Third, the resources are pooled and serve multiple users in a multi-tenant
 model.
 The physical and virtual resources are dynamically assigned and reassigned
 depending on the demand.
 Fourth, provisioning of capabilities is elastic to quickly scale out and
 rapidly released to quickly scale in.
 Lastly, cloud systems provide a metering capability at some level of abstractio
n appropriate to the type of service.
\end_layout

\begin_layout Standard
Service models for cloud computing include Software-as-a-Service(SaaS),
 Platform-as-a-Service(PaaS), and Infrastructure-as-a-Service(IaaS)
\begin_inset CommandInset citation
LatexCommand cite
key "mell_nist_2011"

\end_inset

.
 SaaS allows users to access and use software running on a cloud infrastructure,
 for example Google Docs.
 PaaS allows users to deploy their own applications in a cloud infrastructure
 using programming languages and frameworks supported by the provider.
 IaaS provides the user with the most basic computing resources such as
 processor, storage, and network.
\end_layout

\begin_layout Standard
There are four ways to deploy a cloud
\begin_inset CommandInset citation
LatexCommand cite
key "mell_nist_2011"

\end_inset

.
 A private cloud is operated for a single organization which can be managed
 by the organization itself or a third party and can be housed within or
 outside the organization's premises.
 A community cloud is shared by several organizations to support a specific
 community.
 Public clouds are available for the general public.
 Lastly, hybrid clouds is a composition of two or more clouds.
 
\end_layout

\begin_layout Standard
Another notable characterization of cloud computing was developed at the
 University of California Berkeley
\begin_inset CommandInset citation
LatexCommand cite
key "armbrust_view_2010"

\end_inset

.
\end_layout

\begin_layout Section
Related Work
\end_layout

\begin_layout Standard
A few studies have been made regarding the use of cloud for scientific computing.
 In 2010, Ostermann et.
 al.
 conducted a performance analysis of EC2 cloud computing services for scientific
 computing using microbenchmarks and kernels.
 in 2011, Iosup et.
 al.
 conducted a performance analysis of cloud computing services for Many-Tasks
 Scientific Computing
\begin_inset CommandInset citation
LatexCommand cite
key "iosup_performance_2011"

\end_inset

.
 In 2012, Zhao et.
 al.
 presented an early effort in designing and building CloudDragon, a scientific
 cloud platform which is based on OpenNebula.
 Most recently, Ludescher et.
 al.
 developed a cloud-based execution frameworks for scientific problem solving
 environments which combines a private and public cloud setup
\begin_inset CommandInset citation
LatexCommand cite
key "ludescher_cloud-based_2013"

\end_inset

.
\end_layout

\begin_layout Section
Objectives
\end_layout

\begin_layout Standard
The main objective of this research is to develop cloud computing solutions
 to improve high-performance scientific computing.
 Specifically, this work aims to
\end_layout

\begin_layout Enumerate
evaluate existing public cloud offerings (Amazon EC2, Microsoft Azure) for
 applicability in scientific computing tasks;
\end_layout

\begin_layout Enumerate
develop and deploy a private cloud over commodity desktop computers which
 satisfy scientific applications requirements; 
\end_layout

\begin_layout Enumerate
develop a novel framework and platform to make it easy and efficient for
 scientists to develop scientific applications; and
\end_layout

\begin_layout Enumerate
deploy a private cloud with software for scientific applications.
\end_layout

\begin_layout Section
Methodology
\end_layout

\begin_layout Paragraph
To achieve Objective 1
\end_layout

\begin_layout Enumerate
Obtain accounts from Amazon EC2 and Microsoft Azure.
\end_layout

\begin_layout Paragraph
To achieve Objective 2
\end_layout

\begin_layout Enumerate
Identify key characteristics of scientific applications in terms of computation,
 storage, and network.
\end_layout

\begin_layout Enumerate
Deploy a 5-node private setup.
\end_layout

\begin_layout Enumerate
Study internal architecture of existing cloud computing frameworks(IaaS)
 to identify modules that can be modified to support the requirements of
 scientific applications.
\end_layout

\begin_layout Enumerate
Perform the necessary architectural and implementation specific changes
 to support scientific applications.
\end_layout

\begin_layout Paragraph
To achieve Objective 3
\end_layout

\begin_layout Enumerate
Identify key characteristics of scientific applications in terms of architectura
l and data representation.
\end_layout

\begin_layout Enumerate
Identify patterns in creating scientific applications and develop software
 abstractions.
\end_layout

\begin_layout Enumerate
Create an application programming interface (API) for scientific applications.
\end_layout

\begin_layout Enumerate
Create sample applications using the newly created API.
\end_layout

\begin_layout Paragraph
To achieve Objective 4
\end_layout

\begin_layout Enumerate
Survey a group of scientists to identify their most commonly used scientific
 applications.
\end_layout

\begin_layout Enumerate
Partially implement the features of the identified applications using the
 API developed in Objective 3
\end_layout

\begin_layout Enumerate
Deploy the application as a Software-as-a-Service.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintAll"
bibfiles "proposal"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
